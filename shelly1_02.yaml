---
# Shelly 2 Power Module
# Location: Upstairs Bathroom
#
substitutions:
  project: Upstairs Bathroom Exhaust
  id: shelly1_02
  humidity_difference_threshold: "10.0"   # 10% difference between house humidity and bathroom humidity.
  countdown_duration: "600"               # 900 seconds = 15 minutes

  <<: !include common/substitutions/gpio/shelly1.yaml

<<: !include common/esphome/esp8266.yaml
<<: !include common/common.yaml

script:
  - id: timer_restart
    then:
      - globals.set:
          id: remaining_time
          value: !lambda return $countdown_duration;

binary_sensor:
  # Physical Toggle Switch. Monitor for switch position changes internally. Do not expose to Home Assistant.
  - platform: gpio
    pin:
      number: $button_gpio
    id: button
    filters:
      - delayed_on: 10ms
      - delayed_off: 10ms
    on_state:
      - switch.toggle: relay

      - text_sensor.template.publish:
          id: trigger
          state: PHYSICAL

  # Use motion detection to keep fan running.
  - platform: homeassistant
    id: motion
    entity_id: binary_sensor.upstairs_bathroom_motion
    on_state:
      then:
        if:
          # Reset the timer when the relay is on when motion is detected.
          condition:
            binary_sensor.is_on: motion
          then:
            if:
              condition:
                switch.is_on: relay
              then:
                - script.execute: timer_restart

# fan:
#   - platform: binary
#     name: $project
#     output: virtual_switch

globals:
  - id: remaining_time
    type: int
    restore_value: no
    initial_value: "0"

# Update the countdown timers every 5 seconds.
interval:
  - interval: 5s
    then:
      #- logger.log: "5 seconds have passed."
      #- logger.log:
      #    format: "remaining_time: %s"
      #    args: ['id(remaining_time).state']
      
      - lambda: |-
          if (id(remaining_time) > 0) {
            // When the relay is on.
            if (id(relay).state) {
              // Decrement the timer.
              id(remaining_time) -= 5;

              // Turn off the relay when the time reaches zero... or the remaining time fails a sanity check!
              if (id(remaining_time) <= 0) {
                id(relay).turn_off();
                id(remaining_time) = 0;
              }
            }
          }

sensor:
  # Measure the difference between the house humidity and bathroom humidity from Home Assistant.
  - platform: homeassistant
    id: humidity_difference
    entity_id: sensor.upstairs_bathroom_humidity_difference
    on_value_range:
      - above: $humidity_difference_threshold
        then:
          - switch.turn_on: relay

          - text_sensor.template.publish:
              id: trigger
              state: THRESHOLD

switch:
  - platform: gpio
    id: relay
    pin: $relay_gpio
    #restore_mode: ALWAYS_OFF
    on_turn_on:
      # Start the countdown timer.
      - script.execute: timer_restart

  - platform: template
    id: virtual_switch
    name: $project
    optimistic: no
    lambda: |-
      if (id(relay).state) {
        return true;
      } else {
        return false;
      }
    turn_on_action:
      - switch.turn_on: relay
      
      - text_sensor.template.publish:
          id: trigger
          state: VIRTUAL
    turn_off_action:
      - switch.turn_off: relay

text_sensor:
  # Trigger states: PHYSICAL, VIRTUAL (UI or Alexa/Google), THRESHOLD
  - platform: template
    id: trigger
    name: "$project: Last Trigger"

time:
  - platform: homeassistant
    id: homeassistant_time
    on_time: 
      - seconds: 0
        minutes: /5
        then:
          # Every 5 minutes verify an automatically turned on fan is still above the humidity difference threshold.
          - if:
              condition:
                lambda:  |-
                  return (id(trigger).state == "THRESHOLD");
              then:
                - lambda: |-
                    if (id(humidity_difference).state < $humidity_difference_threshold) {
                      id(relay).turn_off();
                    }
